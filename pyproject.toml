[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gpytorch-mogp"
description = "A package which extends GPyTorch with correlated multi-output GPs"
version = "0.1.0"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Magnus Kristiansen", email = "magnus.kristiansen@dnv.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "gpytorch~=1.11",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.4.2",
]

[project.urls]
Documentation = "https://github.com/magkri/gpytorch-mogp#readme"
Issues = "https://github.com/magkri/gpytorch-mogp/issues"
Source = "https://github.com/magkri/gpytorch-mogp"

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]  # Include Jupyter notebooks in linting and formatting

[tool.ruff.lint]
select = ["ALL"]  # Start by linting everything, then add ignores as needed

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true  # Allow omitting return type annotations for `__init__` methods
